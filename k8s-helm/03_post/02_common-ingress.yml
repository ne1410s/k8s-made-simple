# prometheus
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ui
  namespace: monitoring
  annotations:
    # Uncomment below for 'dynamic' tls (must be hosted cluster)
    #cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: nginx
  tls:
  - hosts: 
    - prometheus.local.ne1410s.co.uk
    secretName: ingress-tls-cert
  rules:
  - host: prometheus.local.ne1410s.co.uk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-kube-prometheus-prometheus
            port:
              number: 9090
status:
  loadBalancer:
    ingress:
    - hostname: localhost
---
#grafana
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-localhost
  namespace: monitoring
  annotations:
    # Uncomment below for 'dynamic' tls (must be hosted cluster)
    #cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grafana.local.ne1410s.co.uk
    secretName: ingress-tls-cert
  rules:
  - host: grafana.local.ne1410s.co.uk
    http:
      paths:
      - backend:
          service:
            name: grafana
            port:
              number: 3000
        path: /
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - hostname: localhost
---
#jaeger
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-localhost
  namespace: monitoring
  annotations:
    # Uncomment below for 'dynamic' tls (must be hosted cluster)
    #cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jaeger.local.ne1410s.co.uk
    secretName: ingress-tls-cert
  rules:
  - host: jaeger.local.ne1410s.co.uk
    http:
      paths:
      - backend:
          service:
            name: jaeger
            port:
              number: 3000
        path: /
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - hostname: localhost
---